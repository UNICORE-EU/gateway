/**
 * 
 * Copyright 2004 Protique Ltd
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at 
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and 
 * limitations under the License. 
 * 
 **/
package eu.unicore.gateway.soap;

import java.util.HashMap;
import java.util.Map;

import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamWriter;

import eu.unicore.gateway.soap.SoapFault.FaultCode;

/**
 * Represents the SOAP 1.1 version
 * @author Protique Ltd.
 * @author golbi
 */
public class Soap11 implements SoapVersion
{
	private static Soap11 instance = new Soap11();
	private double version = 1.1;
	private static final String namespace = "http://schemas.xmlsoap.org/soap/envelope/";
	private static final String prefix = "env";
	private static final String noneRole = namespace + "/role/none";
	private static final String ultimateReceiverRole = namespace
		+ "/role/ultimateReceiver";
	private static final String nextRole = namespace + "/role/next";
	private static final String soapEncodingStyle = "http://www.w3.org/2003/05/soap-encoding";
	public static final QName envelope = new QName(namespace, "Envelope", prefix);
	public static final QName header = new QName(namespace, "Header", prefix);
	public static final QName body = new QName(namespace, "Body", prefix);
	public static final QName fault = new QName(namespace, "Fault", prefix);
	
	private static final Map<FaultCode, String> codes = 
		new HashMap<FaultCode, String>();
	static 
	{
		codes.put(FaultCode.MUST_UNDERSTAND, "MustUnderstand");
		codes.put(FaultCode.VERSION_MISMATCH, "VersionMismatch");
		codes.put(FaultCode.RECEIVER, "Server");
		codes.put(FaultCode.SENDER, "Client");
	}
	
	public static Soap11 getInstance()
	{
		return instance;
	}

	public void writeStartElement(XMLStreamWriter out, String localName)
		throws XMLStreamException
	{
		out.writeStartElement(prefix, localName, namespace);
	}

	public void writeFault(XMLStreamWriter out, SoapFault fault, String serverUri)
		throws XMLStreamException
	{
		writeStartElement(out, "Fault");

		FaultCode code = fault.getCode();
		writeStartElement(out, "faultcode");
		out.writeCharacters(prefix + ":" + codes.get(code));
		out.writeEndElement();

		String reason = fault.getReason();
		writeStartElement(out, "faultstring");
		out.writeCharacters(reason);
		out.writeEndElement();

		writeStartElement(out, "detail");
		out.writeEndElement();

		//Faults which are generated by GW have always the 'next' role.
		writeStartElement(out, "faultactor");
		out.writeCharacters(nextRole);
		out.writeEndElement();
	}

	public double getVersion()
	{
		return version;
	}

	public String getNamespace()
	{
		return namespace;
	}

	public String getPrefix()
	{
		return prefix;
	}

	public QName getEnvelope()
	{
		return envelope;
	}

	public QName getHeader()
	{
		return header;
	}

	public QName getBody()
	{
		return body;
	}

	public QName getFault()
	{
		return fault;
	}

	public String getSoapEncodingStyle()
	{
		return soapEncodingStyle;
	}

	// Role URIs
	// -------------------------------------------------------------------------
	public String getNoneRole()
	{
		return noneRole;
	}

	public String getUltimateReceiverRole()
	{
		return ultimateReceiverRole;
	}

	public String getNextRole()
	{
		return nextRole;
	}
}
